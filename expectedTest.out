    bool a;
    bool b;
    x(int) = 3;
    y(int) = x(int);
    a(bool) = (x(int) == y(int));
    b(bool) = false;
    if ((a(bool) || b(bool))) {
        x(int) = 1;
        return y(int);
    }
    else {
        x(int) = 4;
        return x(int);
    }
    return y(int);
}

void i(bool b) {
    int x;
    int y;
    x(int) = 3;
    y(int) = 5;
    while ((b(bool) && (x(int) > 2))) {
        x(int)--;
    }
    repeat (y(int)) {
        b(bool) = false;
        y(int)--;
    }
    cout << x(int);
    cout << (b(bool) == true);
    cin >> x(int);
    cin >> b(bool);
}

int f(int x, bool b) {
}

void g() {
    int a;
    bool b;
    bool c;
    struct Point p;
    p(Point).x(int) = a(int);
    b(bool) = (a(int) == 3);
    c(bool) = (4 != 4);
    b(bool) = (a(int) < p(Point).x(int));
    b(bool) = (a(int) > p(Point).x(int));
    b(bool) = (a(int) <= p(Point).x(int));
    b(bool) = (3 >= 3);
    f(int,bool->int)((a(int) + (p(Point).y(int) * 2)), b(bool));
    g(->void)();
    a(int) = h(->int)();
    i(bool->void)((b(bool) && c(bool)));
    return;
}
